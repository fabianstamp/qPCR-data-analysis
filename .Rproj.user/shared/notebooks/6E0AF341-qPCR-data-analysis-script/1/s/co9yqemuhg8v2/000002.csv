"0","# Create a data frame that contains group1, group2. .y.and condition_+label"
"0","stat.test <- df_stats %>%"
"0","  group_by(Gene) %>%"
"0","  mutate(group1 = paste0(""WT"", ""\n"", ""(N="", 6, "")"")) %>% # Create column containing WT x axis labels"
"0","  mutate(group2 = paste0(""KO"", ""\n"", ""(N="", 6, "")"")) %>% # Create column containing KO x axis labels"
"0","  get_y_position(formula = Log2FoldChange ~ Condition, fun = ""max"") %>%  # calculate the y.position"
"0","  add_x_position() %>% # add x positions 1 and 2"
"0","  mutate(Condition = ""KO"") %>% # a Condition column is required for mapping of the statistics though it seems to not mater how it is filled."
"0","  left_join(results_stats_final, stat.testx, by = ""Gene"") %>% # use left_join to add the results from the manually calculated statistics"
"0","  distinct(Gene, .keep_all = TRUE) # Since the merging inflated the row number which now does not match the ggplot input, you need to select a subset. This subset contains all relevant details for each gene"
"0",""
"0","stat.test %>% "
"0","  kable(""html"") %>%"
"0","  kable_styling() %>%"
"0","  scroll_box(height = ""200px"")"
